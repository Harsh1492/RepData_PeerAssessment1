# baseDir will be prefixing all data accesses
baseDir <- ".."
# create data sub-directory if necessary
dataDir <- file.path(baseDir, "data")
if(!file.exists(dataDir)) { dir.create(dataDir) }
zipFilePath <- file.path(baseDir, "data", "activity.zip")
# download original data if necessary (skip if exists already as it takes time and bandwith)
if(!file.exists(zipFilePath)) {
}
FilePath <- file.path(baseDir, "data", "activity.csv")
# unzip file if necessary
if(!file.exists(FilePath)) {
}
# cat ("The dataset is located at", filePath, "and was downloaded on downloaded on", DTDownloaded)
# read dataset and load data in R
dataset <- read.csv(filePath, header = TRUE)
dim(dataset)
str(dataset)
# baseDir will be prefixing all data accesses
baseDir <- ".."
# create data sub-directory if necessary
dataDir <- file.path(baseDir, "data")
if(!file.exists(dataDir)) { dir.create(dataDir) }
zipFilePath <- file.path(baseDir, "data", "activity.zip")
# download original data if necessary (skip if exists already as it takes time and bandwith)
if(!file.exists(zipFilePath)) {
}
filePath <- file.path(baseDir, "data", "activity.csv")
# unzip file if necessary
if(!file.exists(filePath)) {
}
# cat ("The dataset is located at", filePath, "and was downloaded on downloaded on", DTDownloaded)
# read dataset and load data in R
dataset <- read.csv(filePath, header = TRUE)
dim(dataset)
str(dataset)
# set echo = True by default as per assignement requirement
opts_chunk$set(echo=TRUE) # Required for the assignement
# cleanup
rm(list=ls())
# for reproductibility
set.seed(590607)
# some usefule variables
dt = Sys.time()
date <- format(dt,"%d-%b-%Y")
time <- format(dt,"%H:%M:%S")
Rversion <- version$version.string
# set echo = True by default as per assignement requirement
opts_chunk$set(echo=TRUE) # Required for the assignement
opts_chunk$set(echo=TRUE) # Required for the assignement
#opts_chunk$set(echo=TRUE) # Required for the assignement
#opts_chunk$set(echo=TRUE) # Required for the assignement
# cleanup
rm(list=ls())
# for reproductibility
set.seed(590607)
# some usefule variables
dt = Sys.time()
date <- format(dt,"%d-%b-%Y")
time <- format(dt,"%H:%M:%S")
Rversion <- version$version.string
# baseDir will be prefixing all data accesses
baseDir <- "."
# create data sub-directory if necessary
dataDir <- file.path(baseDir, "data")
if(!file.exists(dataDir)) { dir.create(dataDir) }
zipFilePath <- file.path(baseDir, "data", "activity.zip")
# download original data if necessary (skip if exists already as it takes time and bandwith)
if(!file.exists(zipFilePath)) {
}
filePath <- file.path(baseDir, "data", "activity.csv")
# unzip file if necessary
if(!file.exists(filePath)) {
}
# cat ("The dataset is located at", filePath, "and was downloaded on downloaded on", DTDownloaded)
# read dataset and load data in R
dataset <- read.csv(filePath, header = TRUE)
dim(dataset)
str(dataset)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
# baseDir will be prefixing all data accesses
baseDir <- "."
# create data sub-directory if necessary
dataDir <- file.path(baseDir, "data")
if(!file.exists(dataDir)) { dir.create(dataDir) }
zipFilePath <- file.path(baseDir, "data", "activity.zip")
# download original data if necessary (skip if exists already as it takes time and bandwith)
if(!file.exists(zipFilePath)) {
}
filePath <- file.path(baseDir, "data", "activity.csv")
# unzip file if necessary
if(!file.exists(filePath)) {
}
# cat ("The dataset is located at", filePath, "and was downloaded on downloaded on", DTDownloaded)
# read dataset and load data in R
dataset <- read.csv(filePath, header = TRUE)
dim(dataset)
str(dataset)
dataset$date
table(dataset$date)
mean(dataset$step)
mean(dataset$steps)
median(dataset$steps)
median(dataset$steps, na.rm=T)
mean(dataset$steps, na.rm=T)
?median
median(dataset$steps, na.rm=TRUE)
table (dataset$steps)
mode (dataset$steps)
hist(median$steps)
hist(dataset$steps, na.rm=TRUE)
jpeg("myplot.jpg")
hist(dataset$steps)
dev.off()
hist(median$date)
dataset$date
table(dataset$date)
as.Date(dataset$date, "%Y-%b-%d")
table(as.Date(dataset$date, "%Y-%b-%d"))
table(as.Date(dataset$date, "%Y-%B-%D"))
table(as.Date(dataset$date, "%Y-%B-%d"))
table(as.Date(dataset$date, "%Y-%B-%d"))
table(dataset$date)
table(as.Date(dataset$date))
tidy <- aggregate(. ~ date, data=dataset, mean)
dim(tidy)
names(tidy)
tidy
tidy <- aggregate(. ~ date, data=dataset, sum)
tidy
stepsPerDay <- perDay <- aggregate(steps ~ date, data=dataset, sum)
stepsPerDay
?aggregate
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, main="Total number of steps per day")
#dev.off()
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, main="Total number of steps per day", xlab="Steps per day")
#dev.off()
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, main="Total number of steps per day", xlab="Steps per day")
#dev.off()
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
#dev.off()
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, main="Total number of steps per day", xlab="Steps per day")
#dev.off()
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, breaks=10 main="Total number of steps per day", xlab="Steps per day")
#dev.off()
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, breaks=100 main="Total number of steps per day", xlab="Steps per day")
#dev.off()
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, breaks=100 main="Total number of steps per day", xlab="Steps per day")
#dev.off()
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, breaks=100, main="Total number of steps per day", xlab="Steps per day")
#dev.off()
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
#dev.off()
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, main="Total number of steps per day", xlab="Steps per day")
#dev.off()
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
#dev.off()
library(lattice)
?lattice
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
?ggplot2
?gplot2
?ggplot2
??ggplot2
library(ggplot2)
?ggplot2
?ggplot2
??ggplot2
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
library(lattice)
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
#dev.off()
library(lattice)
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
hist(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
hist(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
hist(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
?par
geom_histogram(stepsPerDay$steps)
geom_histogram(mapping=stepsPerDay$steps)
qplot(stepsPerDay$steps, geom="histogram")
gplot(stepsPerDay$steps, geom="histogram")
qplot(stepsPerDay$steps, geom="histogram")
qplot(stepsPerDay$steps, binwidth=10, geom="histogram")
qplot(stepsPerDay$steps, breaks=10, geom="histogram")
qplot(stepsPerDay$steps, geom="histogram")
qplot(stepsPerDay$steps, geom="histogram", asp=1)
qplot(stepsPerDay$steps, geom="histogram", asp=2)
qplot(stepsPerDay$steps, geom="histogram", asp=.5)
qplot(stepsPerDay$steps, geom="histogram", asp=.5,main="Total number of steps per day", xlab="Steps per day")
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
hist(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
library(ggplot2)
qplot(stepsPerDay$steps, geom="histogram", asp=.5,main="Total number of steps per day", xlab="Steps per day")
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
hist(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
library(lattice)
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
library(ggplot2)
qplot(stepsPerDay$steps, geom="histogram", asp=.5,main="Total number of steps per day", xlab="Steps per day")
#dev.off()
qplot(stepsPerDay$steps, geom="density", asp=.5,main="Total number of steps per day", xlab="Steps per day")
qplot(stepsPerDay$steps, geom="histogram", binwidth=.5, asp=.5,main="Total number of steps per day", xlab="Steps per day")
qplot(stepsPerDay$steps, geom="histogram", binwidth=2, asp=.5,main="Total number of steps per day", xlab="Steps per day")
qplot(stepsPerDay$steps, geom="histogram",main="Total number of steps per day", xlab="Steps per day")
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
X11 ()
library(lattice)
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
dev.copy(pdf,file.path(figuresDir, "histogramSteps.pdf"));
dev.off ();
library(lattice)
p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
p <- pdf("histogramSteps.pdf")
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
dev.copy(pdf,file.path(figuresDir, "histogramSteps.pdf"));
dev.copy(pdf,"histogramSteps2.pdf");
dev.off ();
library(lattice)
p <- pdf("histogramSteps.pdf")
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
dev.copy(pdf,"histogramSteps2.pdf");
dev.off ();
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
#hist(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
library(lattice)
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
#dev.off()
library(lattice)
#p <- pdf(file.path(figuresDir, "histogramSteps.pdf"))
#hist(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
library(lattice)
histogram(stepsPerDay$steps, breaks=10, main="Total number of steps per day", xlab="Steps per day")
#dev.off()
table(dataset$steps)
table(is.na(dataset$steps)
table(is.na(dataset$steps))
table(is.na(dataset$steps))
table(is.na(dataset$date))
table(is.na(dataset$interval))
mis <- table(is.na(dataset$steps))[1]
mis
mis <- table(is.na(dataset$steps))[0]
mis
mis <- table(is.na(dataset$steps))[[0]
mis
mis <- table(is.na(dataset$steps))[[0]]
mis
table(is.na(dataset$steps))[0]
count(is.na(dataset$steps))
sum(is.na(dataset$steps))
length(is.na(dataset$steps))
length(is.na(dataset$steps)=TRUE)
length(is.na(dataset$steps)==TRUE)
sum(is.na(dataset$steps))
?apply
table(dataset$steps)
apply(dataset$steps,1,function(x) if (is.na(x)) -1)
apply(dataset$steps,1,function(x) if (is.na(x)) return -1)
apply(dataset$steps,1,function(x) if (is.na(x)) return x)
for(r in 1:10) { #nrow(dataset)){
print (dataset$steps[x]);
}
for(r in 1:10) { #nrow(dataset)){
print (dataset$steps[r]);
}
for(r in 1000:1010) { #nrow(dataset)){
print (dataset$steps[r]);
}
table(dataset$steps)
for(r in 1000:1010) { #nrow(dataset)){
if (is.na(dataset$steps[r]))
dataset$steps[r] <- -1;
}
table(dataset$steps)
str(dataset$steps)
for(r in 1000:1010) { #nrow(dataset)){
if (is.na(dataset$steps[r])) {}
dataset$steps[r] <- -1;
}
}
table(dataset$steps)
for(r in 1000:1010) { #nrow(dataset)){
if (is.na(dataset$steps[r])) {
dataset$steps[r] <- -1;
}
}
table(dataset$steps)
for(r in 1:nrow(dataset)){
if (is.na(dataset$steps[r])) {
dataset$steps[r] <- -1;
}
}
table(dataset$steps)
meanPerDay <- aggregate(steps ~ date, data=dataset, mean)
meanPerDay <- aggregate(steps ~ date, data=dataset, mean)
meanPerDay
meanPerDay[21012-11-30]
meanPerDay['21012-11-30']
meanPerDay[date='21012-11-30']
meanPerDay[date=='21012-11-30']
meanPerDay[date=='2012-11-30']
meanPerDay[date==Date('2012-11-30')]
meanPerDay[date==as.Date('2012-11-30')]
meanPerDay[date==as.Date("2012-11-30"")]
meanPerDay[date==as.Date("2012-11-30")]
meanPerDay[date==as.Date("2012-11-30","%Y-%B-%d")]
meanPerDay[date==as.Date("2012-11-30","%Y-%b-%d")]
meanPerDay[which(as.Date("2012-11-30","%Y-%b-%d"))]
meanPerDay["2012-11-30"]
meanPerDay[date == "2012-11-30"]
meanPerDay[date == "2012-11-29"]
meanPerDay[date == "2012-11-29",0]
meanPerDay[date == "2012-11-29",1]
meanPerDay[as.character(date) == "2012-11-29",1]
meanPerDay[as.character(date) == "2012-11-29"]
meanPerDay[as.character(date) == "2012-11-29",steps]
meanPerDay[as.character(date) == "2012-11-29","steps""]
meanPerDay[as.character(date) == "2012-11-29","steps"]
meanPerDay[as.character(date) == "2012-11-29","steps"]
meanPerDay[meanPerDay$date == "2012-11-29","steps"]
meanPerDay[meanPerDay$date == "2012-11-28","steps"]
meanPerDay$steps[meanPerDay$date == "2012-11-28"]
for(r in 1:nrow(dataset)){
if (is.na(dataset$steps[r])) {
dataset$steps[r] <- meanPerDay$steps[meanPerDay$date == dataset$date[r]]
}
}
for(r in 1:nrow(dataset)){
if (is.na(dataset$steps[r])) {
repl <- meanPerDay$steps[meanPerDay$date == dataset$date[r]];
if (!repl || is.na(repl)) print (r);
dataset$steps[r] <- meanPerDay$steps[meanPerDay$date == dataset$date[r]];
}
}
str(dataset$steps)
str(meanPerDay)
str(dataset)
plot(interval ~ steps, data=dataset)
xyplot(interval ~ steps, data=dataset)
plot(interval ~ steps, data=dataset)
plot(interval ~ steps, data=dataset)
mean(stepsPerDay$steps, na.rm=TRUE)
?weekdays
weekdays("2014-06-11")
weekdays(as.Date("2014-06-11"))
weekdays(as.Date("2014-06-11"), abb=T)
weekdays(as.Date("2014-06-13"), abb=T)
weekdays(as.Date("2014-06-14"), abb=T)
weekdays(as.Date("2014-06-15"), abb=T)
weekdays(as.Date("2014-06-15"), abb=T) %in% c("Sat","Sun")
weekdays(as.Date("2014-06-14"), abb=T) %in% c("Sat","Sun")
weekdays(as.Date("2014-06-13"), abb=T) %in% c("Sat","Sun")
>in
?in
??in
??%in%
dataset$day <-"weekday"
dataset$day[weekdays(as.Date("2014-06-13"), abb=T) %in% c("Sat","Sun")] <- "weekend"
table(dataset$day)
dataset$day[weekdays(as.Date(dataset$date), abb=T) %in% c("Sat","Sun")] <- "weekend"
```
table(dataset$day)
head(dataset$day)
head(dataset)
head(dataset,20)
dataset[123,]
dataset[1233,]
dataset[12223,]
dataset[19999,]
dataset[9999,]
weekdays(as.Date("2012-11-04"), abb=T)
weekdays(as.Date("2012-11-12"), abb=T)
weekdays(as.Date("2012-10-05"), abb=T)
intervalDay <- aggregate(steps ~ interval + day, data=dataset, mean)
table(dataset$interval)
table(dataset$interval / 60)
table(dataset$interval / 12)
table(dataset$interval)
table(dataset$interval/10)
table(dataset$interval/100)
table(dataset$interval %% 100)
table(dataset$interval % 100)
table(dataset$interval %% 100)
table(round(dataset$interval / 100)
)
table(round(dataset$interval / 100))
table(dataset$interval)
table(floor(dataset$interval / 100))
table(int(dataset$interval / 100))
table(floor(dataset$interval / 100))
table(dataset$interval %/% 100)
?paste
dataset$minute <- dataset$interval %% 100
dataset$hour <- dataset$interval %/% 100
dataset$elapsed <- dataset$hour * 60 + dataset$minute
dataset$label <- paste (as.character(dataset$hour), ":", as.character(dataset$minute), sep="")
table(dataste$label)
table(dataset$label)
table(dataset$minute)
table(dataset$hour)
table(dataset$elapsed)
table(dataset$label)
?format
dataset$label <- sprintf("%02d:%02d", dataset$hour, dataset$minute)
table(dataset$label)
weekdat("2014-06-12")
weekday("2014-06-12")
weekdays("2014-06-12")
weekdays(as.Date("2014-06-12"))
dataset$interval <- sprintf("%02d:%02d", dataset$hour, dataset$minute)
ste(dataset)
str(dataset)
dataset$interval <- as.factor(sprintf("%02d:%02d", dataset$hour, dataset$minute))
str(dataset)
?plot
plot(steps ~ interval + day, data=intervalDay, type="l")
plot(steps ~ day, data=intervalDay, type="l")
intervalDay <- aggregate(steps ~ interval + day, data=dataset, mean)
table(intervalDay)
plot(dataset$step ~ dataset$interval,type="l")
source('~/.active-rstudio-document', echo=TRUE)
plot(dataset$steps ~ dataset$interval,type="l")
plot(interval ~ steps, data=dataset, type="l")
plot(interval ~ steps, data=dataset)
plot(interval ~ steps, data=dataset)
dev.off()
plot(interval ~ steps, data=dataset)
?getMethod
?getFunction
?getS3Method
install.packages("DDPQuiz3")
?lm
?colSums
?lm
?predict
?dgamma
?predict
?show
